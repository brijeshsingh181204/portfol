



#navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 30px;
  background: rgba(134, 132, 132, 0.7); /* Dark background with transparency */
  backdrop-filter: blur(10px); /* Adds blur effect */
  position: fixed;
  top: 7px; /* Margin from top */
  left: 10%; /* Center horizontally */
  height: 65px;
  width: 1000px;
  border-radius: 40px;
  z-index: 1000;
}



  
  .menu {
    display: flex;
    gap: 20px;
  }
  
  .menulist {
    position: relative;
    color: #b8acac;
    text-decoration: none;
    font-size: 20px;
    transition: color 0.3s ease;
    padding: 10px;
  }
  
  .menulist::before, .menulist::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, rgba(0, 150, 255, 0.7), rgba(0, 255, 200, 0.7));
    left: 0;
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }
  
  .menulist::before {
    top: 0;
    transform-origin: left;
  }
  
  .menulist::after {
    bottom: 0;
    transform-origin: right;
  }
  
  .menulist:hover::before, .menulist:hover::after {
    transform: scaleX(1);
  }
  
  .menulist:hover {
    color: #00aaff;
    text-shadow: 0 0 10px rgba(0, 150, 255, 0.7);
  }
  
  .menulist:hover {
  }
  
  @keyframes glow {
    from {
      text-shadow: 0 0 10px rgba(0, 150, 255, 0.7), 0 0 20px rgba(0, 150, 255, 0.5), 0 0 30px rgba(0, 150, 255, 0.3);
    }
    to {
      text-shadow: 0 0 20px rgba(0, 150, 255, 0.7), 0 0 30px rgba(0, 150, 255, 0.5), 0 0 40px rgba(0, 150, 255, 0.3);
    }
  }
  
  
  .menulist.active {
    color: #00aaff;
    text-shadow: 0 0 10px rgba(0, 150, 255, 0.7);
    

  }
  






  *,
*:after,
*:before {
    box-sizing: border-box;
}

:root {
    --x: 0;
    --y: 0;
    --xp: 0;
    --yp: 0;
    --hue: calc(0 + (var(--xp) * 500));
    --bg: hsl(0 0% 10%);
    --size: 100px;
    --glow: radial-gradient(50% 50% at center,
            hsl(var(--hue) 80% 85%),
            hsl(var(--hue) 80% 70%),
            transparent) calc((var(--x) * 1px) - (var(--size) * 0.5)) calc((var(--y) * 1px) - (var(--size) * 0.5)) / var(--size) var(--size) no-repeat fixed;
}

.controls {
    position: fixed;
    top: 2rem;
    right: 2rem;
}


button {
    border-radius: 1rem;
    text-transform: uppercase;
    font-weight: bold;
    letter-spacing: 0.1ch;
    background: var(--bg);
    border: 4px solid transparent;
    box-shadow: 0 1px hsl(0 0% 100% / 0.15) inset;
    cursor: pointer;
    background:
        linear-gradient(var(--bg), var(--bg)) padding-box,
        var(--glow),
        linear-gradient(black, black) border-box;
    transition: background-size 0.24s;
    touch-action: none;
    position: relative;
    padding: 1rem 2rem;
}

button::before {
    content: "";
    position: absolute;
    inset: 0;
    box-shadow: 0 1px hsl(0 0% 100% / 0.15) inset;
    background: var(--bg);
    z-index: 2;
    /* border: 4px solid transparent; */
    border-radius: 1rem;
}

button span {
    background: var(--glow), rgb(173, 170, 170);
    background-clip: text;
    color: transparent;
    height: 100%;
    width: 100%;
    z-index: 2;
    position: relative;
    inset: 0;
}

:root:has(button:active) {
    --size: 300px;
}

button::after {
    content: "";
    position: absolute;
    inset: -4px;
    filter: blur(20px);
    border: 4px solid transparent;
    background: var(--glow);
    border-radius: 1rem;
}